# -*- coding: utf-8 -*-
"""Name_Entity_Recognition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R6msGSugJBwoZTIzleJxLWrJfv2HO3jV
"""

import spacy
from spacy.tokens import Span

# Sample Amazon reviews
reviews = [
    "I absolutely love my new Apple iPhone 14 – it's fast, sleek, and the camera is amazing!",
    "The Samsung Galaxy S21 is overpriced and the battery dies too quickly.",
    "Bought the Sony WH-1000XM5 headphones. Great sound quality but too expensive.",
    "Terrible experience with the HP laptop. It crashes constantly and is super slow.",
    "Lenovo ThinkPad is durable and reliable. Perfect for business use!"
]

# Load spaCy English model
nlp = spacy.load("en_core_web_sm")

# Rule-based sentiment analysis (simple polarity word list)
positive_words = {"love", "amazing", "great", "durable", "reliable", "perfect", "fast", "sleek"}
negative_words = {"terrible", "overpriced", "crashes", "slow", "dies", "expensive"}

# Function to extract NER and sentiment
def analyze_reviews(reviews):
    for review in reviews:
        doc = nlp(review)

        # Named Entities: Extract Product Names and Brands
        entities = [(ent.text, ent.label_) for ent in doc.ents if ent.label_ in ["ORG", "PRODUCT"]]

        # Rule-based Sentiment
        tokens = [token.text.lower() for token in doc]
        pos_score = sum(word in positive_words for word in tokens)
        neg_score = sum(word in negative_words for word in tokens)

        if pos_score > neg_score:
            sentiment = "Positive"
        elif neg_score > pos_score:
            sentiment = "Negative"
        else:
            sentiment = "Neutral"

        print(f"Review: {review}")
        print(f"→ Entities: {entities}")
        print(f"→ Sentiment: {sentiment}\n")

# Run analysis
analyze_reviews(reviews)